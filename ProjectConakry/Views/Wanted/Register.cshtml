@model ProjectConakry.DomainObjects.WantedUser
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_LayoutPrelogIn.cshtml";
}

<div class="wanted-wrapper clr">
    <section class="wanted-container section registration clr">
        <div class="one-third float-left">
            <div class="sidebar-image">
                <img src="../img/2.png">
            </div>
        </div>
        <div class="two-third float-left">
            @*please change someerrorclass into a real css class*@
            <div class="someerrorclass">@TempData["SignUpError"]</div>
            <h1 class="large bold caps dark-gold-color">Registration</h1>
            <p class="small">Please read our <a href="#" onClick="openTerms()">Terms and Conditions</a> before filling this form</p>
            <form class="register-form" id="wantedRegistrationForm" action="Register" enctype="multipart/form-data" method="POST">
                <h2 class="medium bold caps light-gold-color">Personal Information</h2>
                <fieldset>
                    <legend class="bold">Gender</legend>
                    <div class="field-container">
                        @Html.RadioButtonFor(n => n.Gender, "Male", new {id="radio-male", name="gender"})
                        <label for="radio-male">Male</label><br />
                        @Html.RadioButtonFor(n => n.Gender, "Female", new {id="radio-female", name="gender"})
                        <label for="radio-female">Female</label>
                        <div class="error" id="gender_error">Error</div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend class="bold">Name</legend>
                    <div class="field-container">
                        @Html.TextBoxFor(n => n.FirstName, new { id="first-name", name="first-name", placeholder="First Name"})
                        @Html.TextBoxFor(n => n.LastName, new { id="last-name", name="last-name", placeholder="Last Name"})
                        <div class="error" id="name_error">Error</div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend class="bold">Date and place of birth</legend>
                    <div class="field-container">
                        @Html.TextBoxFor(n => n.DOB, new { type = "date", id="dob", name="dob", max="1998-01-01", min="1950-01-01"})
                        @Html.TextBoxFor(n => n.BirthPlace, new {id="birth-place", name="birth-place", placeholder="Birth Place"})
                        <div class="error" id="birth_error">Error</div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend class="bold">Nationality</legend>
                    <div class="field-container">
                        @Html.TextBoxFor(n => n.Nationality, new { id = "nationality", name = "nationality", placeholder = "Nationality" })
                        <div class="error" id="nationality_error">Error</div>
                    </div>
                </fieldset>
                <h2 class="medium bold caps light-gold-color">Professional Information</h2>
                <fieldset>
                    <legend class="bold">Stage Name</legend>
                    <div class="field-container">
                        @Html.TextBoxFor(n => n.StageName, new {id="stage-name", name="stage-name", placeholder="Stage Name"})
                        <div class="error" id="stagename_error">Error</div>
                    </div>
                </fieldset>            
                <fieldset>
                    <legend class="bold">Summary of Qualifications or Professional Highlights</legend>
                    <div class="field-container">
                        @Html.TextAreaFor(n => n.BriefIndustryExperience,  new {id="experience", name="experience", maxlength = "250", placeholder ="Please limit entry to 250 characters."})
                        <div class="error" id="experience_error">Error</div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend class="bold">Upload your video entry</legend>
                    <div class="field-container">
                        <input type="file" name="video" id="video" accept="video/*">
                        <div class="error" id="video_error">Error</div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend class="bold">Give yourself a score out of ten</legend>
                    <div class="field-container clear">
                        <label for="commitment" class="range-label">Commitment to process</label>
                        @Html.TextBoxFor(model => model.CommitmentToProcessScore, new { type = "range", name="commitment", id="commitment", max="10", value="10"})
                        <div class="range-value bold" id="range-value-commitment"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="commitment" class="range-label">Communication skills</label>
                        @Html.TextBoxFor(model => model.CommunicationSkillsScore, new { type = "range", name="communication", id="communication", max="10", value="10"})
                        <div class="range-value bold" id="range-value-communication"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="dress" class="range-label">Dressing sense</label>
                        @Html.TextBoxFor(model => model.DressingSenseScore, new { type = "range", name="dress", id="dress", max="10", value="10"})
                        <div class="range-value bold" id="range-value-dress"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="knowledge" class="range-label">Knowledge of comedy</label>
                        @Html.TextBoxFor(model => model.KnowledgeOfComedyScore, new { type = "range", name="knowledge", id="knowledge", max="10", value="10"})
                        <div class="range-value bold" id="range-value-knowledge"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="relationship" class="range-label">Relationship with people</label>
                        @Html.TextBoxFor(model => model.RelationshipWithPeopleScore, new { type = "range", name="relationship", id="relationship", max="10", value="10"})
                        <div class="range-value bold" id="range-value-relationship"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="memory" class="range-label">Retentive memory</label>
                        @Html.TextBoxFor(model => model.RetentiveMemoryScore, new { type = "range", name="memory", id="memory", max="10", value="10" })
                        <div class="range-value bold" id="range-value-memory"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="etiquette" class="range-label">Stage etiquette</label>
                        @Html.TextBoxFor(model => model.StageEtiqueteScore, new { type = "range", name="etiquette", id="etiquette", max="10", value="10"})
                        <div class="range-value bold" id="range-value-etiquette"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="discipline" class="range-label">Self discipline</label>
                        @Html.TextBoxFor(model => model.SelfDisciplineScore, new { type = "range", name="discipline", id="discipline", max="10", value="10" })
                        <div class="range-value bold" id="range-value-discipline"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="motivation" class="range-label">Self motivation</label>
                        @Html.TextBoxFor(model => model.SelfMotivationScore, new { type = "range", name="motivation", id="motivation", max="10", value="10"})
                        <div class="range-value bold" id="range-value-motivation"></div>
                    </div>
                    <div class="field-container clear">
                        <label for="presense" class="range-label">Stage presence</label>
                        @Html.TextBoxFor(model => model.StagePresenceScore, new { type = "range", name="presense", id="presense", max="10", value="10"})
                        <div class="range-value bold" id="range-value-presense"></div>
                    </div>
                    <div class="error" id="score_error">Error</div>
                </fieldset>
                <fieldset>
                    <legend class="bold">Name two African comedians who inspire you</legend>
                    <div class="field-container">
                        <label for="inspire-1">1. </label>
                        @Html.TextBoxFor(n => n.FirstComedianInspiration, new {name="inspire-1", id="inspire-1", placeholder="First Comedian"})
                        <br /><br />
                        <label for="inspire-2">2. </label>
                        @Html.TextBoxFor(n => n.SecondComedianInspiration, new {name="inspire-2", id="inspire-2", placeholder="Second Comedian"})
                        <div class="error" id="inspire_error">Error</div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend class="bold">Email</legend>
                    <div class="field-container">
                        &nbsp;&nbsp;&nbsp;@Html.TextBoxFor(n => n.Email, new { id = "reg_email", name = "reg_email", placeholder = "Enter your email" })
                        @*<input type="text" id="reg_email" name="reg_email" placeholder="Enter your email">*@
                        <div class="error" id="regemail_error">Error</div>
                    </div>
                </fieldset>
                <fieldset>
                    @Html.HiddenFor(n => n.AgreedToTermsOfService, true)
                    <input type="checkbox" id="agree-to-terms" name="agree-to-terms">
                    <label for="agree-to-terms">I agree to <a href="#" onClick="openTerms()">Terms and Conditions</a></label>
                </fieldset>
                <input type="button" id="register" class="large-button light-gold-bg caps" value="Continue">
                <br /><br /><p class="small semi-opaque">For further information please contact: wanted@ariyaunlimited.com &copy;2015 <span class="light-gold-color caps">Okayhouse</span> LLC.</p>
            </form>
        </div>
    </section>

    <div class="overlay"></div>
    <div class="modal">
        <div class="close-modal"><img src="../img/close.png"></div>
        <h1 class="bold caps large">Terms and Conditions</h1>
        <h2 class="bold caps medium light-gold-color">Important information about the use of your data</h2>
        <p class="small"><span class="bold dark-gold-color">Kindly note that your video skits will not be returned to you</span>. If you are short listed during the selection process, the Broadcaster and the Producers will ensure that any information provided for the purpose of producing <span class="bold light-gold-color">Wanted<sup>TM</sup></span> will be kept secure and treated as confidential. Any disclosures of information will only be made with your permission.</p>
        <p class="small">However, if you are selected for the <span class="bold light-gold-color">Wanted<sup>TM</sup></span> project, the Producers reserve the right to use any of your details and information supplied by you for the purpose of the <span class="bold light-gold-color">Wanted<sup>TM</sup></span> production, publicity and broadcast, the only exception being your address and contact details.</p>
        <p class="small">The Producers and the broadcaster would like to retain the application forms of candidates for future related use when, for example, producing similar shows if you have been short listed. If you do not consent to the future use of your information, your application forms will be destroyed once the selection process has been completed.</p>
        <p class="small">You are participating by choice and therefore you elect never to institute any class or individual action against the IP owner, organizers, partners or sponsers of Wanted and ancillary activities and to resolve an and all disputes by arbitration.</p>
        <p class="small">Please fill in and submit the form. Submission of this form will be considered as your acceptance of the rules and requirements detailed above.</p>
    </div>
</div>